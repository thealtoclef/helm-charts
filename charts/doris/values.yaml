# This file is generated by create-parent-chart-values.sh.
# It contains the values of the child charts.
# You can modify it manually if you want to change the values of the child charts.
# The values of the child charts are as follows:

doris-cluster:
  # Default values for doris-cluster.
  # This is a YAML-formatted file.
  # Declare variables to be passed into your templates.
  
  nameOverride: ~
  fullnameOverride: ~
  
  # This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""
  
  authProxy:
    enabled: false
    publicDB: false
    autoIAMAuthn: false
    securityContext: {}
    resources: {}
    datasources: []
  
  authSecret: ~
  
  metaService:
    fdb: ~
    conf: ~
  
  feSpec:
    electionNumber: ~
    conf: ~
  
  computeGroups:
    - uniqueId: ~
      conf: ~

doris-operator:
  # Default values for operator.
  # This is a YAML-formatted file.
  # Declare variables to be passed into your templates.
  
  dorisOperator:
    # the namespace of dorisoperator, if not set, the release namespace will be used.
    image:
      repository: apache/doris
      tag: operator-latest
      imagePullPolicy: ""
    # ImagePullSecrets is an optional list of references to secrets in the same namespace to use for pulling any of the images used by this deployment.
    # If specified, these secrets will be passed to individual puller implementations for them to use.
    #  imagePullSecret: "my-registry-key"
    # Map of nodeSelectors to match when scheduling pods on nodes
    nodeSelector: {}
      # kubernetes.io/arch: amd64
      # kubernetes.io/os: linux
      # app.kubernetes.node.name: "k8s-node1"
  
    # node affinity for operator pod scheduling.
    nodeAffinity: {}
    #   requiredDuringSchedulingIgnoredDuringExecution:
    #     nodeSelectorTerms:
    #       - matchFields:
    #           - key: metadata.name
    #             operator: In
    #             values:
    #               - target-host-name
    enableWebhook: false
    podSecurityContext:
      runAsNonRoot: true
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
          - "ALL"
    resources: {}
      # requests:
      #   cpu: 1
      #   memory: 2Gi
      # limits:
      #   cpu: 2
      #   memory: 4Gi

doris-resource-manager:
  # Default values for manager.
  # This is a YAML-formatted file.
  # Declare variables to be passed into your templates.
  
  nameOverride: ~
  fullnameOverride: ~
  
  host: ~
  port: 9030
  authSecret: ~
  globalVariables: []
    # - name: parallel_pipeline_task_num
    #   value: 0
  storageVaults: []
    # - name: aws_s3_vault
    #   type: S3
    #   s3Properties:
    #     endpoint: s3.us-east-1.amazonaws.com
    #     region: us-east-1
    #     authSecret: aws-s3-vault-secret
    #     rootPath: s3_vault_prefix
    #     bucket: my-bucket
    #     provider: S3
    #     usePathStyle: false
    #   isDefault: true
  workloadGroups: []
    # - name: g1
    #   properties:
    #     cpu_share: "10"
    #     memory_limit: "30%"
    #     enable_memory_overcommit: "true"
  catalogs: []
    # - name: postgres_catalog
    #   comment: PostgreSQL Catalog
    #   properties:
    #     type: jdbc
    #     user: postgres
    #     password: 123456
    #     jdbc_url: jdbc:postgresql://127.0.0.1:5432/demo
    #     driver_url: file:///path/to/postgresql-42.5.1.jar
    #     driver_class: org.postgresql.Driver
    #   propertiesSecret: postgres-catalog-secret
  users: []
    # - username: test_user
    #   passwordSecretRef:
    #     name: user-credentials
    #     key: test_user
    #   grants:
    #     - privileges:
    #         - SELECT
    #         - ALTER
    #         - INSERT
    #       target: TABLE db1.tbl1
    #     - privileges:
    #         - SELECT
    #       target: ALL TABLES IN DATABASE db1
    #     - privileges:
    #         - SELECT
    #       target: ALL TABLES IN ALL DATABASES
    #     - privileges:
    #         - USAGE
    #       target: RESOURCE 'test_resource'

doris-resource-operator:
  # Default values for manager.
  # This is a YAML-formatted file.
  # Declare variables to be passed into your templates.
  
  nameOverride: ~
  fullnameOverride: ~
  
  controllerManager:
    replicas: 1
    manager:
      image:
        repository: ghcr.io/thealtoclef/doris-resource-operator
        pullPolicy: IfNotPresent
      resources:
        requests:
          cpu: 50m
          memory: 64Mi
        limits:
          cpu: 200m
          memory: 256Mi
      securityContext:
        privileged: false
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: true
        capabilities:
          drop: ["ALL"]
    podSecurityContext:
      runAsNonRoot: true
      fsGroup: 65534
      runAsUser: 65532
      runAsGroup: 65532
      seccompProfile:
        type: RuntimeDefault
  managerConfig:
    controllerManagerConfigYaml:
      health:
        healthProbeBindAddress: :8081
      leaderElection:
        leaderElect: true
        resourceName: dfc6d3c2.nakamasato.com
      metrics:
        bindAddress: 127.0.0.1:8080
      webhook:
        port: 9443
  metricsService:
    ports:
      - name: https
        port: 8443
        protocol: TCP
        targetPort: https
    type: ClusterIP

fdb-cluster:
  # Default values for fdb-cluster.
  # This is a YAML-formatted file.
  # Declare variables to be passed into your templates.
  
  nameOverride: ~
  fullnameOverride: ~
  
  # This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""
  
  # This section builds out the RBAC for the cluster
  rbac:
    # Specifies whether a role and role binding should be created
    create: true
  
  # This section builds out the spec for the cluster
  spec: {}

fdb-operator:
  # Default values for fdb-cluster.
  # This is a YAML-formatted file.
  # Declare variables to be passed into your templates.
  
  image:
    repository: foundationdb/fdb-kubernetes-operator
    tag: v2.3.0
    pullPolicy: IfNotPresent
  initContainers: {}
  globalMode:
    enabled: false
  replicas: null
  imagePullSecrets: []
  annotations: {}
  podAnnotations: {}
  podLabels: {}
  serviceAccount:
    create: true
    name: null
    imagePullSecrets: []
    annotations: {}
  priorityClassName: null
  securityContext:
    runAsUser: 4059
    runAsGroup: 4059
    fsGroup: 4059
  containerSecurityContext:
    allowPrivilegeEscalation: false
    privileged: false
    capabilities:
      drop:
        - all
    readOnlyRootFilesystem: true
  nodeSelector: {}
  affinity: {}
  tolerations: {}
  resources:
    limits:
      cpu: 500m
      memory: 256Mi
    requests:
      cpu: 500m
      memory: 256Mi
  initContainersResources:
    limits:
      cpu: 10m
      memory: 50Mi
    requests:
      cpu: 10m
      memory: 50Mi
  initContainerSecurityContext:
    allowPrivilegeEscalation: false
    privileged: false
    capabilities:
      drop:
        - all
    readOnlyRootFilesystem: true
  nodeReadClusterRole: true
