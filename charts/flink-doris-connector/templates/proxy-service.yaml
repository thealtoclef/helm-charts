{{- if .Values.proxy.enabled }}
apiVersion: v1
kind: Service
metadata:
  name: {{ include "helm-chart.fullname" . }}-proxy
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "helm-chart.labels" . | nindent 4 }}
    component: proxy
  {{- with .Values.proxy.service.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  type: {{ .Values.proxy.service.type }}
  {{- if and (eq .Values.proxy.service.type "LoadBalancer") .Values.proxy.service.loadBalancerIP }}
  loadBalancerIP: {{ .Values.proxy.service.loadBalancerIP }}
  {{- end }}
  {{- if and (eq .Values.proxy.service.type "LoadBalancer") .Values.proxy.service.loadBalancerSourceRanges }}
  loadBalancerSourceRanges:
    {{- range .Values.proxy.service.loadBalancerSourceRanges }}
    - {{ . }}
    {{- end }}
  {{- end }}
  {{- if and (eq .Values.proxy.service.type "ClusterIP") .Values.proxy.service.clusterIP }}
  clusterIP: {{ .Values.proxy.service.clusterIP }}
  {{- end }}
  {{- if .Values.proxy.service.externalIPs }}
  externalIPs:
    {{- range .Values.proxy.service.externalIPs }}
    - {{ . }}
    {{- end }}
  {{- end }}
  ports:
    - port: {{ .Values.proxy.service.port }}
      targetPort: http
      protocol: TCP
      name: http
      {{- if and (or (eq .Values.proxy.service.type "NodePort") (eq .Values.proxy.service.type "LoadBalancer")) .Values.proxy.service.nodePort }}
      nodePort: {{ .Values.proxy.service.nodePort }}
      {{- end }}
  selector:
    {{- include "helm-chart.selectorLabels" . | nindent 4 }}
    component: proxy
{{- end }}