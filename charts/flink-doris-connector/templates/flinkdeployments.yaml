{{- $namespace := $.Release.Namespace }}
{{- range .Values.pipelines }}
{{- $metadataName := printf "%s-%d" .name (default 0 .resetNonce | int) }}
---
apiVersion: flink.apache.org/v1beta1
kind: FlinkDeployment
metadata:
  name: {{ $metadataName }}
  namespace: {{ $namespace }}
  labels:
    {{- include "helm-chart.labels" $ | nindent 4 }}
    pipelineName: {{ .name }}
  {{- with $.Values.labels }}
    {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- with $.Values.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  image: {{ include "flink.imagePath" $ }}
  imagePullPolicy: {{ $.Values.image.pullPolicy }}
  flinkVersion: {{ $.Values.flinkVersion }}
  serviceAccount: {{ default (include "helm-chart.fullname" $) $.Values.serviceAccount }}
  {{- with $.Values.ingress }}
  ingress:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  podTemplate:
    {{- if or $.Values.podLabels $.Values.podAnnotations }}
    metadata:
      {{- with $.Values.podLabels }}
      labels:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $.Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- end }}
    spec:
      {{- with $.Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $.Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $.Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $.Values.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- $sourceRef := default $.Values.global.sourceRef .sourceRef }}
      {{- if eq (include "auth_proxy.needs_proxy" (dict "sourceRef" $sourceRef "root" $)) "true" }}
      initContainers:
        {{- include "auth_proxy.single_source" (dict "sourceRef" $sourceRef "root" $) | nindent 8 }}
      {{- end }}
      containers:
        - name: flink-main-container
          {{- with $.Values.containerSecurityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          ports:
            - name: metrics
              containerPort: {{ $.Values.metrics.port }}
              protocol: TCP
          volumeMounts:
            - name: tmp
              mountPath: /tmp
          {{- range list "data" "log" }}
            - name: flink-{{ . }}
              mountPath: /opt/flink/{{ . }}
          {{- end }}
          {{- with $.Values.env }}
          env:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with $.Values.envFrom }}
          envFrom:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      volumes:
        - name: tmp
          emptyDir: {}
      {{- range list "data" "log" }}
        - name: flink-{{ . }}
          {{- $config := index $.Values.persistence . }}
          {{- if $config.enabled }}
          {{- if $config.csi }}
          csi:
            {{- toYaml $config.csi | nindent 12 }}
          {{- else }}
          persistentVolumeClaim:
            claimName: flink-{{ . }}
          {{- end }}
          {{- else }}
          emptyDir: {}
          {{- end }}
      {{- end }}
  jobManager:
    {{- with default $.Values.global.jobManager.replicas (and .jobManager .jobManager.replicas) }}
    replicas: {{ . }}
    {{- end }}
    resource:
      {{- $mergedJobManagerResource := merge (default dict (and .jobManager .jobManager.resource)) $.Values.global.jobManager.resource }}
      {{- $mergedJobManagerResource | toYaml | nindent 6 }}
    podTemplate:
      {{- $mergedJobManagerPodTemplate := merge (default dict (and .jobManager .jobManager.podTemplate)) (default dict $.Values.global.jobManager.podTemplate) }}
      {{- $mergedJobManagerPodTemplate | toYaml | nindent 6 }}
  taskManager:
    {{- with default $.Values.global.taskManager.replicas (and .taskManager .taskManager.replicas) }}
    replicas: {{ . }}
    {{- end }}
    resource:
      {{- $mergedTaskManagerResource := merge (default dict (and .taskManager .taskManager.resource)) $.Values.global.taskManager.resource }}
      {{- $mergedTaskManagerResource | toYaml | nindent 6 }}
    podTemplate:
      {{- $mergedTaskManagerPodTemplate := merge (default dict (and .taskManager .taskManager.podTemplate)) (default dict $.Values.global.taskManager.podTemplate) }}
      {{- $mergedTaskManagerPodTemplate | toYaml | nindent 6 }}
  flinkConfiguration:
    ### Metrics configuration
    metrics.reporter.prom.factory.class: org.apache.flink.metrics.prometheus.PrometheusReporterFactory
    metrics.reporter.prom.port: {{ $.Values.metrics.port | quote }}
    ### State directory configuration
    state.checkpoints.dir: {{ $.Values.objectStore }}/{{ .name }}/checkpoints
    state.savepoints.dir: {{ $.Values.objectStore }}/{{ .name }}/savepoints
    ### High availability configuration
    high-availability: org.apache.flink.kubernetes.highavailability.KubernetesHaServicesFactory
    high-availability.storageDir: {{ $.Values.objectStore }}/{{ .name }}/ha
    {{- $mergedFlinkConfig := merge (default dict .flinkConfiguration) (default dict $.Values.global.flinkConfiguration) }}
    {{- with $mergedFlinkConfig }}
    ### User provided configuration
    # flinkConfiguration must be map of str: str.
    # Iterate through and quote the values, in case they look like integers.
    {{- range $key, $val := . }}
    {{ $key }}: {{ $val | quote }}
    {{- end }}
    {{- end }}
  {{- with .restartNonce }}
  restartNonce: {{ . }}
  {{- end }}
  job:
    jarURI: file:///opt/flink/lib/flink-doris-connector.jar
    entryClass: org.apache.doris.flink.tools.cdc.CdcTools
    {{- $sourceType := default $.Values.global.sourceType .sourceType }}
    {{- $sourceDatabase := default $.Values.global.sourceDatabase .sourceDatabase }}
    {{- $slotName := (printf "%s-%s" $namespace .name) | replace "-" "_" }}
    {{- $sourceConfDefault := dict "database-name" $sourceDatabase "slot.name" $slotName }}
    args:
      - "{{ $sourceType }}-sync-database"
      - --database
      - {{ default $.Values.global.sinkDatabase .sinkDatabase | quote }}
      - --job-name
      - {{ .name | quote }}
      {{- with default $.Values.global.sinkTablePrefix .sinkTablePrefix }}
      - --table-prefix
      - {{ . | quote }}
      {{- end }}
      {{- with default $.Values.global.sinkTableSuffix .sinkTableSuffix }}
      - --table-suffix
      - {{ . | quote }}
      {{- end }}
      {{- with default $.Values.global.includingTables .includingTables }}
      - --including-tables
      - {{ . | quote }}
      {{- end }}
      {{- with default $.Values.global.excludingTables .excludingTables }}
      - --excluding-tables
      - {{ . | quote }}
      {{- end }}
      {{- range $key, $value := merge (include "getSourceDetails" (dict "root" $ "sourceRef" (default $.Values.global.sourceRef .sourceRef)) | fromYaml) (default dict .sourceConf) $.Values.global.sourceConf $sourceConfDefault }}
      - --{{ $sourceType }}-conf
      - "{{ $key }}={{ $value }}"
      {{- end }}
      {{- range $key, $value := merge (include "getSinkDetails" (dict "root" $ "sinkRef" (default $.Values.global.sinkRef .sinkRef)) | fromYaml) (default dict .sinkConf) $.Values.global.sinkConf }}
      - --sink-conf
      - "{{ $key }}={{ $value }}"
      {{- end }}
      {{- range $key, $value := merge (default dict .tableConf) $.Values.global.tableConf }}
      - --table-conf
      - "{{ $key }}={{ $value }}"
      {{- end }}
      {{- with default $.Values.global.singleSink .singleSink }}
      - --single-sink
      - {{ . | quote }}
      {{- end }}
      {{- range concat (default list .extraArgs) (default list $.Values.global.extraArgs) }}
      - {{ . | quote }}
      {{- end }}
    {{- $mergedJob := merge (default dict .job) (default dict $.Values.global.job) }}
    {{- range $key, $value := $mergedJob }}
    {{ $key }}: {{ $value }}
    {{- end }}
{{- end }}
