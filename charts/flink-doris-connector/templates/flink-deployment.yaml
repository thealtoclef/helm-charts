apiVersion: flink.apache.org/v1beta1
kind: FlinkDeployment
metadata:
  name: {{ template "robustName" .Release.Name }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "helm-chart.labels" . | nindent 4 }}
  {{- with .Values.labels }}
    {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- with .Values.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  image: {{ include "flink.imagePath" . }}
  imagePullPolicy: {{ .Values.image.pullPolicy }}
  flinkVersion: {{ .Values.flinkVersion }}
  serviceAccount: {{ default (include "helm-chart.fullname" .) .Values.serviceAccount }}
  {{- with .Values.ingress }}
  ingress:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  jobManager:
    replicas: {{ .Values.jobManager.replicas }}
    resource:
      {{- .Values.jobManager.resource | toYaml | nindent 6 }}
    {{- with .Values.jobManager.podTemplate }}
    podTemplate:
      {{- toYaml . | nindent 6 }}
    {{- end }}
  taskManager:
    replicas: {{ .Values.taskManager.replicas }}
    resource:
      {{- .Values.taskManager.resource | toYaml | nindent 6 }}
    {{- with .Values.taskManager.podTemplate }}
    podTemplate:
      {{- toYaml . | nindent 6 }}
    {{- end }}
  podTemplate:
    {{- if or .Values.podLabels .Values.podAnnotations }}
    metadata:
      {{- with .Values.podLabels }}
      labels:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- end }}
    spec:
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if or (eq (include "auth_proxy.has_cloud_sql" .) "true") (eq (include "auth_proxy.has_alloydb" .) "true") }}
      initContainers:
      {{- if eq (include "auth_proxy.has_cloud_sql" .) "true" }}
        {{- include "auth_proxy.cloud_sql" . | nindent 8 }}
      {{- end }}
      {{- if eq (include "auth_proxy.has_alloydb" .) "true" }}
        {{- include "auth_proxy.alloydb" . | nindent 8 }}
      {{- end }}
      {{- end }}
      containers:
        - name: flink-main-container
          {{- with .Values.containerSecurityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
          {{- range list "data" "log" }}
            - name: flink-{{ . }}
              mountPath: /opt/flink/{{ . }}
          {{- end }}
          {{- with .Values.env }}
          env:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.envFrom }}
          envFrom:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      volumes:
      {{- range list "data" "log" }}
        - name: flink-{{ . }}
          {{- $config := index $.Values.persistence . }}
          {{- if $config.enabled }}
          {{- if $config.csi }}
          csi:
            {{- toYaml $config.csi | nindent 12 }}
          {{- else }}
          persistentVolumeClaim:
            claimName: flink-{{ . }}
          {{- end }}
          {{- else }}
          emptyDir: {}
          {{- end }}
      {{- end }}
  flinkConfiguration:
    ### RocksDB configuration
    {{- if .Values.rocksDB.enabled }}
    state.backend: rocksdb
    state.backend.incremental: true
    {{- else }}
    taskmanager.memory.managed.size: 0 mb
    {{- end }}
    {{- if .Values.highAvailability.enabled }}
    ### Flink high-availability configuration
    high-availability: org.apache.flink.kubernetes.highavailability.KubernetesHaServicesFactory
    high-availability.type: kubernetes
    high-availability.storageDir: {{ .Values.objectStore }}/ha
    {{- end }}
    {{- if .Values.monitoring.enabled }}
    ### Flink metrics configuration
    metrics.reporters: prometheus
    metrics.reporter.prometheus.factory.class: org.apache.flink.metrics.prometheus.PrometheusReporterFactory
    metrics.reporter.prometheus.port: {{ .Values.monitoring.port | quote }}
    {{- end }}
    {{- if .Values.global.flinkConfiguration }}
    ### User provided configuration
    # flinkConfiguration must be map of str: str.
    # Iterate through and quote the values, in case they look like integers.
    {{- range $key, $val := .Values.global.flinkConfiguration }}
    {{ $key }}: {{ $val | quote }}
    {{- end }}
    {{- end }}
